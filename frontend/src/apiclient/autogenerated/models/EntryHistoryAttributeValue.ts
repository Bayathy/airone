/* tslint:disable */
/* eslint-disable */
/**
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.0.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from "../runtime";
import type { Attribute } from "./Attribute";
import {
  AttributeFromJSON,
  AttributeFromJSONTyped,
  AttributeToJSON,
} from "./Attribute";
import type { EntryAttributeValue } from "./EntryAttributeValue";
import {
  EntryAttributeValueFromJSON,
  EntryAttributeValueFromJSONTyped,
  EntryAttributeValueToJSON,
} from "./EntryAttributeValue";

/**
 *
 * @export
 * @interface EntryHistoryAttributeValue
 */
export interface EntryHistoryAttributeValue {
  /**
   *
   * @type {number}
   * @memberof EntryHistoryAttributeValue
   */
  readonly id: number;
  /**
   *
   * @type {number}
   * @memberof EntryHistoryAttributeValue
   */
  type: number;
  /**
   *
   * @type {Date}
   * @memberof EntryHistoryAttributeValue
   */
  readonly createdTime: Date;
  /**
   *
   * @type {string}
   * @memberof EntryHistoryAttributeValue
   */
  createdUser: string;
  /**
   *
   * @type {EntryAttributeValue}
   * @memberof EntryHistoryAttributeValue
   */
  readonly currValue: EntryAttributeValue;
  /**
   *
   * @type {EntryAttributeValue}
   * @memberof EntryHistoryAttributeValue
   */
  readonly prevValue: EntryAttributeValue;
  /**
   *
   * @type {number}
   * @memberof EntryHistoryAttributeValue
   */
  readonly prevId: number | null;
  /**
   *
   * @type {Attribute}
   * @memberof EntryHistoryAttributeValue
   */
  parentAttr: Attribute;
}

/**
 * Check if a given object implements the EntryHistoryAttributeValue interface.
 */
export function instanceOfEntryHistoryAttributeValue(value: object): boolean {
  let isInstance = true;
  isInstance = isInstance && "id" in value;
  isInstance = isInstance && "type" in value;
  isInstance = isInstance && "createdTime" in value;
  isInstance = isInstance && "createdUser" in value;
  isInstance = isInstance && "currValue" in value;
  isInstance = isInstance && "prevValue" in value;
  isInstance = isInstance && "prevId" in value;
  isInstance = isInstance && "parentAttr" in value;

  return isInstance;
}

export function EntryHistoryAttributeValueFromJSON(
  json: any
): EntryHistoryAttributeValue {
  return EntryHistoryAttributeValueFromJSONTyped(json, false);
}

export function EntryHistoryAttributeValueFromJSONTyped(
  json: any,
  ignoreDiscriminator: boolean
): EntryHistoryAttributeValue {
  if (json === undefined || json === null) {
    return json;
  }
  return {
    id: json["id"],
    type: json["type"],
    createdTime: new Date(json["created_time"]),
    createdUser: json["created_user"],
    currValue: EntryAttributeValueFromJSON(json["curr_value"]),
    prevValue: EntryAttributeValueFromJSON(json["prev_value"]),
    prevId: json["prev_id"],
    parentAttr: AttributeFromJSON(json["parent_attr"]),
  };
}

export function EntryHistoryAttributeValueToJSON(
  value?: EntryHistoryAttributeValue | null
): any {
  if (value === undefined) {
    return undefined;
  }
  if (value === null) {
    return null;
  }
  return {
    type: value.type,
    created_user: value.createdUser,
    parent_attr: AttributeToJSON(value.parentAttr),
  };
}
