/* tslint:disable */
/* eslint-disable */
/**
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.0.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from "../runtime";
import type { EntryAttributeValueObject } from "./EntryAttributeValueObject";
import {
  EntryAttributeValueObjectFromJSON,
  EntryAttributeValueObjectFromJSONTyped,
  EntryAttributeValueObjectToJSON,
} from "./EntryAttributeValueObject";

/**
 *
 * @export
 * @interface EntryAttributeValueNamedObject
 */
export interface EntryAttributeValueNamedObject {
  /**
   *
   * @type {string}
   * @memberof EntryAttributeValueNamedObject
   */
  name: string;
  /**
   *
   * @type {EntryAttributeValueObject}
   * @memberof EntryAttributeValueNamedObject
   */
  object: EntryAttributeValueObject | null;
}

/**
 * Check if a given object implements the EntryAttributeValueNamedObject interface.
 */
export function instanceOfEntryAttributeValueNamedObject(
  value: object
): boolean {
  let isInstance = true;
  isInstance = isInstance && "name" in value;
  isInstance = isInstance && "object" in value;

  return isInstance;
}

export function EntryAttributeValueNamedObjectFromJSON(
  json: any
): EntryAttributeValueNamedObject {
  return EntryAttributeValueNamedObjectFromJSONTyped(json, false);
}

export function EntryAttributeValueNamedObjectFromJSONTyped(
  json: any,
  ignoreDiscriminator: boolean
): EntryAttributeValueNamedObject {
  if (json === undefined || json === null) {
    return json;
  }
  return {
    name: json["name"],
    object: EntryAttributeValueObjectFromJSON(json["object"]),
  };
}

export function EntryAttributeValueNamedObjectToJSON(
  value?: EntryAttributeValueNamedObject | null
): any {
  if (value === undefined) {
    return undefined;
  }
  if (value === null) {
    return null;
  }
  return {
    name: value.name,
    object: EntryAttributeValueObjectToJSON(value.object),
  };
}
