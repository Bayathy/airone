/* tslint:disable */
/* eslint-disable */
/**
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.0.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from "../runtime";
import {
  EntityAttr,
  EntityAttrFromJSON,
  EntityAttrFromJSONTyped,
  EntityAttrToJSON,
} from "./EntityAttr";
import {
  WebhookPost,
  WebhookPostFromJSON,
  WebhookPostFromJSONTyped,
  WebhookPostToJSON,
} from "./WebhookPost";

/**
 *
 * @export
 * @interface EntityCreate
 */
export interface EntityCreate {
  /**
   *
   * @type {number}
   * @memberof EntityCreate
   */
  readonly id: number;
  /**
   *
   * @type {string}
   * @memberof EntityCreate
   */
  name: string;
  /**
   *
   * @type {Array<EntityAttr>}
   * @memberof EntityCreate
   */
  attrs?: Array<EntityAttr>;
  /**
   *
   * @type {string}
   * @memberof EntityCreate
   */
  note: string;
  /**
   *
   * @type {Array<WebhookPost>}
   * @memberof EntityCreate
   */
  webhooks: Array<WebhookPost>;
}

export function EntityCreateFromJSON(json: any): EntityCreate {
  return EntityCreateFromJSONTyped(json, false);
}

export function EntityCreateFromJSONTyped(
  json: any,
  ignoreDiscriminator: boolean
): EntityCreate {
  if (json === undefined || json === null) {
    return json;
  }
  return {
    id: json["id"],
    name: json["name"],
    attrs: !exists(json, "attrs")
      ? undefined
      : (json["attrs"] as Array<any>).map(EntityAttrFromJSON),
    note: json["note"],
    webhooks: (json["webhooks"] as Array<any>).map(WebhookPostFromJSON),
  };
}

export function EntityCreateToJSON(value?: EntityCreate | null): any {
  if (value === undefined) {
    return undefined;
  }
  if (value === null) {
    return null;
  }
  return {
    name: value.name,
    attrs:
      value.attrs === undefined
        ? undefined
        : (value.attrs as Array<any>).map(EntityAttrToJSON),
    note: value.note,
    webhooks: (value.webhooks as Array<any>).map(WebhookPostToJSON),
  };
}
