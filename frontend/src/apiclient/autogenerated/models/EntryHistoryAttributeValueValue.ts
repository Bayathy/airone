/* tslint:disable */
/* eslint-disable */
/**
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.0.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from "../runtime";
import {
  EntryHistoryAttributeValueValueAsGroup,
  EntryHistoryAttributeValueValueAsGroupFromJSON,
  EntryHistoryAttributeValueValueAsGroupFromJSONTyped,
  EntryHistoryAttributeValueValueAsGroupToJSON,
} from "./EntryHistoryAttributeValueValueAsGroup";
import {
  EntryHistoryAttributeValueValueAsObject,
  EntryHistoryAttributeValueValueAsObjectFromJSON,
  EntryHistoryAttributeValueValueAsObjectFromJSONTyped,
  EntryHistoryAttributeValueValueAsObjectToJSON,
} from "./EntryHistoryAttributeValueValueAsObject";
import {
  EntryHistoryAttributeValueValueAsObjectSchema,
  EntryHistoryAttributeValueValueAsObjectSchemaFromJSON,
  EntryHistoryAttributeValueValueAsObjectSchemaFromJSONTyped,
  EntryHistoryAttributeValueValueAsObjectSchemaToJSON,
} from "./EntryHistoryAttributeValueValueAsObjectSchema";

/**
 *
 * @export
 * @interface EntryHistoryAttributeValueValue
 */
export interface EntryHistoryAttributeValueValue {
  /**
   *
   * @type {EntryHistoryAttributeValueValueAsObject}
   * @memberof EntryHistoryAttributeValueValue
   */
  asObject?: EntryHistoryAttributeValueValueAsObject | null;
  /**
   *
   * @type {string}
   * @memberof EntryHistoryAttributeValueValue
   */
  asString?: string;
  /**
   *
   * @type {{ [key: string]: EntryHistoryAttributeValueValueAsObject; }}
   * @memberof EntryHistoryAttributeValueValue
   */
  asNamedObject?: { [key: string]: EntryHistoryAttributeValueValueAsObject };
  /**
   *
   * @type {Array<EntryHistoryAttributeValueValueAsObject>}
   * @memberof EntryHistoryAttributeValueValue
   */
  asArrayObject?: Array<EntryHistoryAttributeValueValueAsObject>;
  /**
   *
   * @type {Array<string>}
   * @memberof EntryHistoryAttributeValueValue
   */
  asArrayString?: Array<string>;
  /**
   *
   * @type {Array<{ [key: string]: object; }>}
   * @memberof EntryHistoryAttributeValueValue
   */
  asArrayNamedObject?: Array<{ [key: string]: object }>;
  /**
   *
   * @type {Array<EntryHistoryAttributeValueValueAsObjectSchema>}
   * @memberof EntryHistoryAttributeValueValue
   */
  asArrayGroup?: Array<EntryHistoryAttributeValueValueAsObjectSchema>;
  /**
   *
   * @type {boolean}
   * @memberof EntryHistoryAttributeValueValue
   */
  asBoolean?: boolean;
  /**
   *
   * @type {EntryHistoryAttributeValueValueAsGroup}
   * @memberof EntryHistoryAttributeValueValue
   */
  asGroup?: EntryHistoryAttributeValueValueAsGroup | null;
  /**
   *
   * @type {EntryHistoryAttributeValueValueAsGroup}
   * @memberof EntryHistoryAttributeValueValue
   */
  asRole?: EntryHistoryAttributeValueValueAsGroup | null;
  /**
   *
   * @type {Array<EntryHistoryAttributeValueValueAsObjectSchema>}
   * @memberof EntryHistoryAttributeValueValue
   */
  asArrayRole?: Array<EntryHistoryAttributeValueValueAsObjectSchema>;
}

export function EntryHistoryAttributeValueValueFromJSON(
  json: any
): EntryHistoryAttributeValueValue {
  return EntryHistoryAttributeValueValueFromJSONTyped(json, false);
}

export function EntryHistoryAttributeValueValueFromJSONTyped(
  json: any,
  ignoreDiscriminator: boolean
): EntryHistoryAttributeValueValue {
  if (json === undefined || json === null) {
    return json;
  }
  return {
    asObject: !exists(json, "as_object")
      ? undefined
      : EntryHistoryAttributeValueValueAsObjectFromJSON(json["as_object"]),
    asString: !exists(json, "as_string") ? undefined : json["as_string"],
    asNamedObject: !exists(json, "as_named_object")
      ? undefined
      : mapValues(
          json["as_named_object"],
          EntryHistoryAttributeValueValueAsObjectFromJSON
        ),
    asArrayObject: !exists(json, "as_array_object")
      ? undefined
      : (json["as_array_object"] as Array<any>).map(
          EntryHistoryAttributeValueValueAsObjectFromJSON
        ),
    asArrayString: !exists(json, "as_array_string")
      ? undefined
      : json["as_array_string"],
    asArrayNamedObject: !exists(json, "as_array_named_object")
      ? undefined
      : json["as_array_named_object"],
    asArrayGroup: !exists(json, "as_array_group")
      ? undefined
      : (json["as_array_group"] as Array<any>).map(
          EntryHistoryAttributeValueValueAsObjectSchemaFromJSON
        ),
    asBoolean: !exists(json, "as_boolean") ? undefined : json["as_boolean"],
    asGroup: !exists(json, "as_group")
      ? undefined
      : EntryHistoryAttributeValueValueAsGroupFromJSON(json["as_group"]),
    asRole: !exists(json, "as_role")
      ? undefined
      : EntryHistoryAttributeValueValueAsGroupFromJSON(json["as_role"]),
    asArrayRole: !exists(json, "as_array_role")
      ? undefined
      : (json["as_array_role"] as Array<any>).map(
          EntryHistoryAttributeValueValueAsObjectSchemaFromJSON
        ),
  };
}

export function EntryHistoryAttributeValueValueToJSON(
  value?: EntryHistoryAttributeValueValue | null
): any {
  if (value === undefined) {
    return undefined;
  }
  if (value === null) {
    return null;
  }
  return {
    as_object: EntryHistoryAttributeValueValueAsObjectToJSON(value.asObject),
    as_string: value.asString,
    as_named_object:
      value.asNamedObject === undefined
        ? undefined
        : mapValues(
            value.asNamedObject,
            EntryHistoryAttributeValueValueAsObjectToJSON
          ),
    as_array_object:
      value.asArrayObject === undefined
        ? undefined
        : (value.asArrayObject as Array<any>).map(
            EntryHistoryAttributeValueValueAsObjectToJSON
          ),
    as_array_string: value.asArrayString,
    as_array_named_object: value.asArrayNamedObject,
    as_array_group:
      value.asArrayGroup === undefined
        ? undefined
        : (value.asArrayGroup as Array<any>).map(
            EntryHistoryAttributeValueValueAsObjectSchemaToJSON
          ),
    as_boolean: value.asBoolean,
    as_group: EntryHistoryAttributeValueValueAsGroupToJSON(value.asGroup),
    as_role: EntryHistoryAttributeValueValueAsGroupToJSON(value.asRole),
    as_array_role:
      value.asArrayRole === undefined
        ? undefined
        : (value.asArrayRole as Array<any>).map(
            EntryHistoryAttributeValueValueAsObjectSchemaToJSON
          ),
  };
}
