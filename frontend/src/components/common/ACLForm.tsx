import {
  Box,
  MenuItem,
  Select,
  Table,
  TableBody,
  TableCell,
  TableHead,
  TableRow,
  Typography,
} from "@mui/material";
import React, { FC } from "react";
import { Control, Controller, useFieldArray } from "react-hook-form";
import { UseFormGetValues } from "react-hook-form/dist/types/form";

import { ACLRole } from "../../apiclient/autogenerated";
import { Schema } from "../../components/acl/ACLFormSchema";

import { DjangoContext } from "services/DjangoContext";

interface AclInfo {
  isPublic: boolean;
  permissions: Record<number, ACLRole>;
  defaultPermission?: number;
}

interface Props {
  control: Control<Schema>;
  getValues: UseFormGetValues<Schema>;
  watch: any;
}

export const ACLForm: FC<Props> = ({ control, getValues, watch }) => {
  const djangoContext = DjangoContext.getInstance();

  const { fields } = useFieldArray({
    control,
    name: "roles",
  });

  return (
    <Box>
      <Table className="table table-bordered">
        <TableHead>
          <TableRow sx={{ backgroundColor: "#455A64" }}>
            <TableCell sx={{ color: "#FFFFFF" }}>項目</TableCell>
            <TableCell sx={{ color: "#FFFFFF" }}>内容</TableCell>
          </TableRow>
        </TableHead>
        <TableBody>
          <TableRow>
            <TableCell>公開設定</TableCell>
            <TableCell>
              {/* TODO fix width */}
              <Controller
                name="isPublic"
                control={control}
                defaultValue={true}
                render={({ field, fieldState: { error } }) => (
                  <Select
                    {...field}
                    fullWidth={true}
                    value={field.value ? 1 : 0}
                    onChange={(e) => field.onChange(e.target.value === 1)}
                  >
                    <MenuItem value={1}>公開</MenuItem>
                    <MenuItem value={0}>限定公開</MenuItem>
                  </Select>
                )}
              />
            </TableCell>
          </TableRow>
        </TableBody>
      </Table>

      <Box>
        {!watch("isPublic") && (
          <>
            <Box my="32px">
              <Typography variant="h4" align="center">
                公開制限設定
              </Typography>
            </Box>

            <Table className="table table-bordered">
              <TableHead>
                <TableRow sx={{ backgroundColor: "#455A64" }}>
                  <TableCell sx={{ color: "#FFFFFF" }}>ロール</TableCell>
                  <TableCell sx={{ color: "#FFFFFF" }}>備考</TableCell>
                  <TableCell />
                </TableRow>
              </TableHead>
              <TableBody>
                <TableRow>
                  <TableCell>全員</TableCell>
                  <TableCell />
                  <TableCell>
                    <Controller
                      control={control}
                      name="defaultPermission"
                      defaultValue={djangoContext?.aclTypes.nothing.value}
                      render={({ field, fieldState: { error } }) => (
                        <Select {...field} fullWidth={true}>
                          {Object.keys(djangoContext?.aclTypes ?? {}).map(
                            (key, index) => (
                              <MenuItem
                                key={index}
                                value={djangoContext?.aclTypes[key].value}
                              >
                                {djangoContext?.aclTypes[key].name}
                              </MenuItem>
                            )
                          )}
                        </Select>
                      )}
                    />
                  </TableCell>
                </TableRow>
                {fields &&
                  fields.map((role, index) => (
                    <TableRow key={role.id}>
                      <TableCell>{role.name}</TableCell>
                      <TableCell>{role.description}</TableCell>
                      <TableCell>
                        <Controller
                          control={control}
                          name={`roles.${index}.currentPermission`}
                          defaultValue={djangoContext?.aclTypes.nothing.value}
                          render={({ field, fieldState: { error } }) => (
                            <Select {...field} fullWidth={true}>
                              <MenuItem value={0}>(未設定)</MenuItem>
                              {Object.keys(djangoContext?.aclTypes ?? {}).map(
                                (key, index) => (
                                  <MenuItem
                                    key={index}
                                    value={djangoContext?.aclTypes[key].value}
                                  >
                                    {djangoContext?.aclTypes[key].name}
                                  </MenuItem>
                                )
                              )}
                            </Select>
                          )}
                        />
                      </TableCell>
                    </TableRow>
                  ))}
              </TableBody>
            </Table>
          </>
        )}
      </Box>
    </Box>
  );
};
