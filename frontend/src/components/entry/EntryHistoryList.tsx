import {
  Box,
  Pagination,
  Stack,
  Table,
  TableBody,
  TableCell,
  TableHead,
  TableRow,
  Typography,
} from "@mui/material";
import React, { FC } from "react";

import { EntryHistory } from "../../apiclient/autogenerated";
import { formatDate } from "../../utils/DateUtil";

import { AttributeValue } from "./AttributeValue";

interface Props {
  histories: Array<EntryHistory>;
  page: number;
  maxPage: number;
  handleChangePage: (page: number) => void;
}

export const EntryHistoryList: FC<Props> = ({
  histories,
  page,
  maxPage,
  handleChangePage,
}) => {
  return (
    <Box>
      <Table>
        <TableHead>
          <TableRow sx={{ backgroundColor: "#455A64" }}>
            <TableCell sx={{ color: "#FFFFFF" }}>項目</TableCell>
            <TableCell sx={{ color: "#FFFFFF" }}>変更前</TableCell>
            <TableCell sx={{ color: "#FFFFFF" }}>変更後</TableCell>
            <TableCell sx={{ color: "#FFFFFF" }}>実行日時</TableCell>
            <TableCell sx={{ color: "#FFFFFF" }}>実行者</TableCell>
            <TableCell sx={{ color: "#FFFFFF" }}>復旧</TableCell>
          </TableRow>
        </TableHead>

        <TableBody>
          {histories.map((history) => (
            <TableRow>
              <TableCell>{history.name}</TableCell>
              <TableCell>
                {history.prev != null ? (
                  <AttributeValue
                    attrInfo={{
                      type: history.prev.type,
                      value: history.prev.value,
                    }}
                  />
                ) : (
                  <Typography />
                )}
                {history.prev?.value?.toString() ?? ""}
              </TableCell>
              <TableCell>
                <AttributeValue
                  attrInfo={{
                    type: history.curr.type,
                    value: history.curr.value,
                  }}
                />
              </TableCell>
              <TableCell>{formatDate(history.curr.createdTime)}</TableCell>
              <TableCell>{history.curr.createdUser}</TableCell>
              {/* FIXME implement recovery button */}
              <TableCell>TBD</TableCell>
            </TableRow>
          ))}
        </TableBody>
      </Table>

      <Box display="flex" justifyContent="center" my="30px">
        <Stack spacing={2}>
          <Pagination
            count={maxPage}
            page={page}
            onChange={(e, page) => handleChangePage(page)}
            color="primary"
          />
        </Stack>
      </Box>
    </Box>
  );
};
