import { Box, Container } from "@mui/material";
import React, { FC, useEffect, useState } from "react";
import { useAsync } from "react-use";

import { ACLObjtypeEnum } from "apiclient/autogenerated";
import { ACLHistoryList } from "components/acl/ACLHistoryList";
import { Loading } from "components/common/Loading";
import { PageHeader } from "components/common/PageHeader";
import { EntityBreadcrumbs } from "components/entity/EntityBreadcrumbs";
import { EntryBreadcrumbs } from "components/entry/EntryBreadcrumbs";
import { useTypedParams } from "hooks/useTypedParams";
import { aironeApiClientV2 } from "repository/AironeApiClientV2";

export const ACLHistoryPage: FC = () => {
  const { objectId } = useTypedParams<{ objectId: number }>();
  const [breadcrumbs, setBreadcrumbs] = useState<JSX.Element>(<Box />);

  const acl = useAsync(async () => {
    return await aironeApiClientV2.getAcl(objectId);
  }, [objectId]);

  const aclHistory = useAsync(async () => {
    return await aironeApiClientV2.getAclHistory(objectId);
  }, [objectId]);

  useEffect(() => {
    if (acl.value == null) return;

    switch (acl.value.objtype) {
      case ACLObjtypeEnum.Entity:
        aironeApiClientV2.getEntity(objectId).then((resp) => {
          setBreadcrumbs(
            <EntityBreadcrumbs entity={resp} title="ACL変更履歴" />
          );
        });
        break;
      case ACLObjtypeEnum.Entry:
        aironeApiClientV2.getEntry(objectId).then((resp) => {
          setBreadcrumbs(<EntryBreadcrumbs entry={resp} title="ACL変更履歴" />);
        });
        break;
    }
  }, [acl]);

  return (
    <Box className="container-fluid">
      {breadcrumbs}

      <PageHeader title={acl.value?.name ?? ""} description="ACL変更履歴" />

      {aclHistory.loading ? (
        <Loading />
      ) : (
        <Container>
          <ACLHistoryList histories={aclHistory.value ?? []} />
        </Container>
      )}
    </Box>
  );
};
