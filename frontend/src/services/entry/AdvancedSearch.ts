import {
  AdvancedSearchResultAttrInfo,
  AdvancedSearchResultAttrInfoFilterKeyEnum,
} from "../../apiclient/autogenerated";

export type AttrsFilter = Record<
  string,
  { filterKey: AdvancedSearchResultAttrInfoFilterKeyEnum; keyword: string }
>;

export function formatAdvancedSearchPrams({
  attrFilter,
  entityIds,
  searchAllEntities,
  entryName,
  hasReferral,
  referralName,
  baseParams,
}: {
  attrFilter?: AttrsFilter;
  entityIds?: string[];
  searchAllEntities?: boolean;
  entryName?: string;
  hasReferral?: boolean;
  referralName?: string;
  baseParams?: URLSearchParams;
}): URLSearchParams {
  const params = new URLSearchParams(baseParams);

  if (entityIds != null) {
    params.delete("entity");
    entityIds.forEach((id) => {
      params.append("entity", id);
    });
  }

  if (entryName != null) {
    params.set("entry_name", entryName);
  }

  if (searchAllEntities != null) {
    params.set("is_all_entities", searchAllEntities ? "true" : "false");
  }

  if (hasReferral != null) {
    params.set("has_referral", hasReferral ? "true" : "false");
  }

  if (referralName != null) {
    params.set("referral_name", referralName);
  }

  if (attrFilter != null) {
    params.set(
      "attrinfo",
      JSON.stringify(
        Object.keys(attrFilter).map(
          (key): AdvancedSearchResultAttrInfo => ({
            name: key,
            filterKey: attrFilter[key].filterKey,
            keyword: attrFilter[key].keyword,
          })
        )
      )
    );
  }

  return params;
}
